# Generated by Django 2.0.7 on 2018-07-31 20:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActionLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('action_type', models.IntegerField(choices=[(1, 'Upvote (Voting Rule)')], default=1)),
                ('metadata', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SteemAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('steem_username', models.CharField(max_length=255)),
                ('posting_key', models.CharField(help_text='Private posting key. See it at https://steemit.com/@<username>/permissions', max_length=51)),
                ('auto_claim_rewards', models.BooleanField(default=False)),
                ('vp_limit', models.PositiveIntegerField(blank=True, default=80, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VotingRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('target_account', models.CharField(help_text='Account to vote', max_length=255)),
                ('weight', models.IntegerField(default=100, help_text='Should be between -100 and +100')),
                ('delay', models.IntegerField(default=20, help_text='Minutes to wait before casting a vote')),
                ('daily_maximum', models.IntegerField(default=3, help_text='Maximum number of votes spendable on a daily basis')),
                ('upvote_comments', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('voter_account', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='voter.SteemAccount')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='actionlog',
            name='actor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='actor', to='voter.SteemAccount'),
        ),
        migrations.AddField(
            model_name='actionlog',
            name='affected',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='affected', to='voter.SteemAccount'),
        ),
    ]
